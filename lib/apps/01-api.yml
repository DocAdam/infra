---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: apps
spec:
  type: ClusterIP
  selector:
    app: api
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: apps
  labels:
    app: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
              weight: 1
      containers:
      - image: nginx/nginx-prometheus-exporter:0.4.2
        imagePullPolicy: Always
        name: nginx-exporter
        args:
          - -nginx.scrape-uri=http://localhost:8080/stub_status
        ports:
          - containerPort: 9113
            name: metrics
            protocol: TCP
        resources:
          limits:
            cpu: 25m
            memory: 25Mi
          requests:
            cpu: 10m
            memory: 10Mi
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9113
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9113
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
      - image: moov/api:v2020.07.14.1
        imagePullPolicy: Always
        name: api
        env:
          - name: LOG_FORMAT
            value: plain
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        volumeMounts:
          - name: nginx-temp
            mountPath: /var/cache/nginx/
          - name: nginx-run
            mountPath: /var/run/
        resources:
          limits:
            cpu: 25m
            memory: 25Mi
          requests:
            cpu: 10m
            memory: 10Mi
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 101
      volumes:
        - name: nginx-temp
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
      restartPolicy: Always

---
# apiVersion: batch/v1beta1
# kind: CronJob
# metadata:
#   name: apitest-cookie
#   namespace: apps
#   labels:
#     app: apitest
# spec:
#   suspend: false
#   concurrencyPolicy: Forbid
#   schedule: "*/2 * * * *"
#   jobTemplate:
#     spec:
#       template:
#         metadata:
#           labels:
#             app: apitest
#         spec:
#           containers:
#           - name: cookie
#             image: moov/apitest:v2020.04.17.1
#             imagePullPolicy: Always
#             args: ["-cleanup", "-pause"]
#             ports:
#               - containerPort: 9099
#                 name: metrics
#                 protocol: TCP
#           restartPolicy: OnFailure
---
# apiVersion: batch/v1beta1
# kind: CronJob
# metadata:
#   name: apitest-oauth
#   namespace: apps
#   labels:
#     app: apitest
# spec:
#   suspend: false
#   concurrencyPolicy: Forbid
#   schedule: "*/2 * * * *"
#   jobTemplate:
#     spec:
#       template:
#         metadata:
#           labels:
#             app: apitest
#         spec:
#           containers:
#           - name: oauth
#             image: moov/apitest:v2020.04.17.1
#             imagePullPolicy: Always
#             args: ["-cleanup", "-pause", "-oauth"]
#             ports:
#               - containerPort: 9099
#                 name: metrics
#                 protocol: TCP
#           restartPolicy: OnFailure
---
# apiVersion: batch/v1beta1
# kind: CronJob
# metadata:
#   name: apitest-ach-iat
#   namespace: apps
#   labels:
#     app: apitest
# spec:
#   suspend: false
#   concurrencyPolicy: Forbid
#   schedule: "*/2 * * * *"
#   jobTemplate:
#     spec:
#       template:
#         metadata:
#           labels:
#             app: apitest
#         spec:
#           containers:
#           - name: iat
#             image: moov/apitest:v2020.04.17.1
#             imagePullPolicy: Always
#             args: ["-ach.type=IAT", "-cleanup", "-pause"]
#             ports:
#               - containerPort: 9099
#                 name: metrics
#                 protocol: TCP
#           restartPolicy: OnFailure
---
