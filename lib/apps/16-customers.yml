---
apiVersion: v1
kind: Service
metadata:
  name: customers
  namespace: apps
spec:
  type: ClusterIP
  selector:
    app: customers
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: metrics
      protocol: TCP
      port: 9090
      targetPort: 9090

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: customers
  namespace: apps
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rewrite-target: /customers
    ingress.kubernetes.io/auth-type: forward
    ingress.kubernetes.io/auth-url: https://api.moov.io/v1/auth/check
    ingress.kubernetes.io/auth-response-headers: X-User-Id,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Content-Type
    ingress.kubernetes.io/content-type-nosniff: "true"
    ingress.kubernetes.io/force-hsts: "true"
    ingress.kubernetes.io/hsts-max-age: "315360000"
    ingress.kubernetes.io/hsts-include-subdomains: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/ssl-host: "api.moov.io"
    ingress.kubernetes.io/ssl-force-host: "true"
spec:
  rules:
    - host: api.moov.io
      http:
        paths:
          - path: /v1/customers
            backend:
              serviceName: customers
              servicePort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: customers-ping
  namespace: apps
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rewrite-target: /ping
    ingress.kubernetes.io/content-type-nosniff: "true"
    ingress.kubernetes.io/force-hsts: "true"
    ingress.kubernetes.io/hsts-max-age: "315360000"
    ingress.kubernetes.io/hsts-include-subdomains: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    ingress.kubernetes.io/ssl-host: "api.moov.io"
    ingress.kubernetes.io/ssl-force-host: "true"
spec:
  rules:
    - host: api.moov.io
      http:
        paths:
          - path: /v1/customers/ping
            backend:
              serviceName: customers
              servicePort: 8080

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: customers-data
  namespace: apps
spec:
  accessModes:
    - ReadWriteOnce # mountable only to a single node
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: customers-mysql-data
  namespace: apps
spec:
  accessModes:
    - ReadWriteOnce # mountable only to a single node
  resources:
    requests:
      storage: 10Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: customers
  namespace: apps
  labels:
    app: customers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customers
  template:
    metadata:
      labels:
        app: customers
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
              weight: 1
      volumes:
        - name: customers-data
          persistentVolumeClaim:
            claimName: customers-data
        - name: customers-mysql-data
          persistentVolumeClaim:
            claimName: customers-mysql-data
      containers:
      - image: mysql:8.0
        name: mysql
        env:
          - name: MYSQL_DATABASE
            value: customers
          - name: MYSQL_USER
            value: customers
          - name: MYSQL_RANDOM_ROOT_PASSWORD
            value: "yes"
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: customers-mysql-password
                key: password
        ports:
          - containerPort: 3306
            name: mysql
        volumeMounts:
          - name: customers-mysql-data
            mountPath: /var/lib/mysql
      - image: moov/customers:v0.3.0
        imagePullPolicy: Always
        name: customers
        args:
          - -http.addr=:8080
          - -admin.addr=:9090
        env:
          - name: DEFAULT_ROUTING_NUMBER
            # Arbitrary (but real) routing nubmer for now. This would need to be changed per FI/deployment.
            value: '121042882'
          - name: CLOUD_PROVIDER
            value: local
          # - name: FILEBLOB_BASE_URL
          #   value: ./storage/
          # - name: FILEBLOB_HMAC_SECRET
          #   value: insecure-example-value
          - name: LOG_FORMAT
            value: plain
          # - name: SQLITE_DB_PATH
          #   value: /opt/moov/customers/customers.db
          - name: DATABASE_TYPE
            value: mysql
          - name: MYSQL_ADDRESS
            value: 'tcp(localhost:3306)'
          - name: MYSQL_DATABASE
            value: customers
          - name: MYSQL_USER
            value: customers
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: customers-mysql-password
                key: password
        volumeMounts:
          - name: customers-data
            mountPath: /opt/moov/customers/
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9090
            name: metrics
            protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 25m
            memory: 25Mi
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      restartPolicy: Always

---
