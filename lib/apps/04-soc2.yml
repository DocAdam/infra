---
apiVersion: v1
kind: Service
metadata:
  name: soc2
  namespace: apps
spec:
  type: ClusterIP
  selector:
    app: soc2
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: soc2
  namespace: apps
  labels:
    app: soc2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: soc2
  template:
    metadata:
      labels:
        app: soc2
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
              weight: 1
      containers:
      - image: nginx/nginx-prometheus-exporter:0.4.2
        imagePullPolicy: Always
        name: nginx-exporter
        args:
          - -nginx.scrape-uri=http://localhost:8080/stub_status
        ports:
          - containerPort: 9113
            name: metrics
            protocol: TCP
        resources:
          limits:
            cpu: 25m
            memory: 25Mi
          requests:
            cpu: 10m
            memory: 10Mi
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9113
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9113
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
      - image: moov/soc2:v2019.12.26.1
        imagePullPolicy: Always
        name: soc2
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        # env:
        #   - name: GITHUB_TOKEN
        #     valueFrom:
        #       secretKeyRef:
        #         name: soc2-github
        #         key: token
        volumeMounts:
          - name: nginx-temp
            mountPath: /var/cache/nginx/
          - name: nginx-run
            mountPath: /var/run/
        resources:
          limits:
            cpu: 25m
            memory: 25Mi
          requests:
            cpu: 10m
            memory: 10Mi
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 101
      volumes:
        - name: nginx-temp
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
      restartPolicy: Always
---
