# TODO(adam): notes from docs
# - store certs in kv? (Why not k8s Secret?)
#   - https://docs.traefik.io/configuration/acme/#as-a-key-value-store-entry
# - https://docs.traefik.io/configuration/commons/#custom-error-pages
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: lb
data:
  traefik.yaml: |
    global:
      checkNewVersion: true
      sendAnonymousUsage: true
    entryPoints:
      http:
        address: ":80"
      https:
        address: ":443"
      traefik:
        address: ":8081"
    providers:
      providersThrottleDuration: 2s
      file:
        filename: "/etc/traefik/traefik.yaml"
        watch: true
      # kubernetesIngress:
      #   namespaces: [apps, infra, lb]
    http:
      services:
        api:
          loadBalancer:
            servers:
              - url: 'http://api.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/"
              interval: "30s"
              timeout: "5s"
              scheme: http
        api-apps:
          loadBalancer:
            servers:
              - url: 'http://api-apps.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/"
              interval: "30s"
              timeout: "5s"
              scheme: http
        docs:
          loadBalancer:
            servers:
              - url: 'http://docs.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/"
              interval: "30s"
              timeout: "5s"
              scheme: http
        moovio:
          loadBalancer:
            servers:
              - url: 'http://moovio.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/"
              interval: "30s"
              timeout: "5s"
              scheme: http
        ach:
          loadBalancer:
            servers:
              - url: 'http://ach.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/ping"
              interval: "30s"
              timeout: "5s"
              scheme: http
        auth:
          loadBalancer:
            servers:
              - url: 'http://auth.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/ping"
              interval: "30s"
              timeout: "5s"
              scheme: http
        paygate:
          loadBalancer:
            servers:
              - url: 'http://paygate.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/ping"
              interval: "30s"
              timeout: "5s"
              scheme: http
        slackin:
          loadBalancer:
            servers:
              - url: 'http://slackin.sales.svc.cluster.local:3000/'
            healthCheck:
              path: "/"
              interval: "30s"
              timeout: "5s"
              scheme: http
        watchman:
          loadBalancer:
            servers:
              - url: 'http://watchman.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/ping"
              interval: "30s"
              timeout: "5s"
              scheme: http
        accounts:
          loadBalancer:
            servers:
              - url: 'http://accounts.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/ping"
              interval: "30s"
              timeout: "5s"
              scheme: http
        fed:
          loadBalancer:
            servers:
              - url: 'http://fed.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/ping"
              interval: "30s"
              timeout: "5s"
              scheme: http
        customers:
          loadBalancer:
            servers:
              - url: 'http://customers.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/ping"
              interval: "30s"
              timeout: "5s"
              scheme: http
        imagecashletter:
          loadBalancer:
            servers:
              - url: 'http://imagecashletter.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/ping"
              interval: "30s"
              timeout: "5s"
              scheme: http
        oauth2-proxy:
          loadBalancer:
            servers:
              - url: 'http://oauth2-proxy.infra.svc.cluster.local:4180/'
        soc2:
          loadBalancer:
            servers:
              - url: 'http://soc2.apps.svc.cluster.local:8080/'
            healthCheck:
              path: "/"
              interval: "30s"
              timeout: "5s"
              scheme: http
        corteza:
          loadBalancer:
            servers:
              - url: "http://corteza-webapp.sales.svc.cluster.local/"
            healthCheck:
              path: "/"
              interval: "10s"
              timeout: "5s"
              scheme: http
        corteza-api:
          loadBalancer:
            servers:
              - url: "http://corteza-server.sales.svc.cluster.local/"
            healthCheck:
              path: "/version"
              interval: "10s"
              timeout: "5s"
              scheme: http
      middlewares:
        api-moov-io-http:
          redirectScheme:
            scheme: https
            permanent: true
        crm-moov-io-http:
          redirectScheme:
            scheme: https
            permanent: true
        docs-moov-io-http:
          redirectScheme:
            scheme: https
            permanent: true
        infra-moov-io-http:
          redirectScheme:
            scheme: https
            permanent: true
        slack-moovio-http:
          redirectScheme:
            scheme: https
            permanent: true
        moov-io-http:
          redirectScheme:
            scheme: https
            permanent: true
        ach:
          stripPrefix:
            prefixes:
              - "/v1/ach/"
        auth:
          stripPrefix:
            prefixes:
              - "/v1/"
        auth-ping:
          stripPrefix:
            prefixes:
              - "/v1/auth"
        paygate-depositories:
          stripPrefix:
            prefixes:
              - "/v1/ach/"
        paygate-events:
          stripPrefix:
            prefixes:
              - "/v1/ach/"
        paygate-gateways:
          stripPrefix:
            prefixes:
              - "/v1/ach/"
        paygate-originators:
          stripPrefix:
            prefixes:
              - "/v1/ach/"
        paygate-receivers:
          stripPrefix:
            prefixes:
              - "/v1/ach/"
        paygate-transfers:
          stripPrefix:
            prefixes:
              - "/v1/ach/"
        paygate-ping:
          stripPrefix:
            prefixes:
              - "/v1/paygate"
        moovio-watchman:
          stripPrefix:
            prefixes:
              - "/watchman"
        watchman:
          stripPrefix:
            prefixes:
              - "/v1/watchman"
        accounts:
          stripPrefix:
            prefixes:
              - "/v1/"
        accounts-ping:
          stripPrefix:
            prefixes:
              - "/v1/accounts"
        fed:
          stripPrefix:
            prefixes:
              - "/v1/"
        fed-ping:
          stripPrefix:
            prefixes:
              - "/v1/fed/"
        customers:
          stripPrefix:
            prefixes:
              - "/v1/"
        imagecashletter:
          stripPrefix:
            prefixes:
              - "/v1/imagecashletter"
        soc2:
          stripPrefix:
            prefixes:
              - "/soc2"
      routers:
        "api-moov-io-http":
          entryPoints: [http]
          service: api
          rule: "Host(`api.moov.io`)"
          middlewares:
            - api-moov-io-http
        "api-moov-io":
          entryPoints: [https]
          service: api
          rule: "Host(`api.moov.io`)"
          tls:
            certResolver: default
        "api-moov-io-api-apps":
          entryPoints: [https]
          service: api-apps
          rule: "Host(`api.moov.io`) && PathPrefix(`/apps/`)"
          tls:
            certResolver: default
        "docs-moov-io-http":
          entryPoints: [http]
          service: docs
          rule: "Host(`docs.moov.io`)"
          middlewares:
            - docs-moov-io-http
        "docs-moov-io":
          entryPoints: [https]
          service: docs
          rule: "Host(`docs.moov.io`)"
          tls:
            certResolver: default
        "slack-moovio":
          entryPoints: [https]
          service: slackin
          rule: "Host(`slack.moov.io`)"
          tls:
            certResolver: default
        "slack-moovio-http":
          entryPoints: [http]
          service: slackin
          rule: "Host(`slack.moov.io`)"
          middlewares:
            - slack-moovio-http
        "moovio-watchman":
          entryPoints: [https]
          service: watchman
          rule: "Host(`moov.io`) && PathPrefix(`/watchman`)"
          middlewares:
            - moovio-watchman
          tls:
            certResolver: default
        "moov-io-http":
          entryPoints: [http]
          service: moovio
          rule: "Host(`moov.io`)"
          middlewares:
            - moov-io-http
        "moov-io":
          entryPoints: [https]
          service: moovio
          rule: "Host(`moov.io`)"
          tls:
            certResolver: default
        ach:
          entryPoints: [https]
          service: ach
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/ach/files`, `/v1/ach/ping`)"
          middlewares:
            - ach
          tls:
            certResolver: default
        auth:
          entryPoints: [https]
          service: auth
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/users`, `/v1/oauth2`)"
          middlewares:
            - auth
          tls:
            certResolver: default
        "auth-ping":
          entryPoints: [https]
          service: auth
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/auth/ping`)"
          middlewares:
            - auth-ping
          tls:
            certResolver: default
        "paygate-depositories":
          entryPoints: [https]
          service: paygate
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/ach/depositories`)"
          middlewares:
            - paygate-depositories
          tls:
            certResolver: default
        "paygate-events":
          entryPoints: [https]
          service: paygate
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/ach/events`)"
          middlewares:
            - paygate-events
          tls:
            certResolver: default
        "paygate-gateways":
          entryPoints: [https]
          service: paygate
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/ach/gateways`)"
          middlewares:
            - paygate-gateways
          tls:
            certResolver: default
        "paygate-originators":
          entryPoints: [https]
          service: paygate
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/ach/originators`)"
          middlewares:
            - paygate-originators
          tls:
            certResolver: default
        "paygate-receivers":
          entryPoints: [https]
          service: paygate
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/ach/receivers`)"
          middlewares:
            - paygate-receivers
          tls:
            certResolver: default
        "paygate-transfers":
          entryPoints: [https]
          service: paygate
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/ach/transfers`)"
          middlewares:
            - paygate-transfers
          tls:
            certResolver: default
        "paygate-ping":
          entryPoints: [https]
          service: paygate
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/paygate/ping`)"
          middlewares:
            - paygate-ping
          tls:
            certResolver: default
        "watchman":
          entryPoints: [https]
          service: watchman
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/watchman/`)"
          middlewares:
            - watchman
          tls:
            certResolver: default
        "accounts":
          entryPoints: [https]
          service: accounts
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/accounts`)"
          middlewares:
            - accounts
          tls:
            certResolver: default
        "accounts-ping":
          entryPoints: [https]
          service: accounts
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/accounts/ping`)"
          middlewares:
            - accounts-ping
          tls:
            certResolver: default
        "fed":
          entryPoints: [https]
          service: fed
          rule: "Host(`api.moov.io`) && (PathPrefix(`/v1/fed/ach`) || PathPrefix(`/v1/fed/wire`))"
          middlewares:
            - fed
          tls:
            certResolver: default
        "fed-ping":
          entryPoints: [https]
          service: fed
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/fed/ping`)"
          middlewares:
            - fed-ping
          tls:
            certResolver: default
        "customers":
          entryPoints: [https]
          service: customers
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/customers/`)"
          middlewares:
            - customers
          tls:
            certResolver: default
        "imagecashletter":
          entryPoints: [https]
          service: imagecashletter
          rule: "Host(`api.moov.io`) && PathPrefix(`/v1/imagecashletter/`)"
          middlewares:
            - imagecashletter
          tls:
            certResolver: default
        "infra-oauth2":
          entryPoints: [https]
          service: oauth2-proxy
          rule: "Host(`infra.moov.io`) && PathPrefix(`/oauth2`)"
          tls:
            certResolver: default
        "infra-moov-io-http":
          entryPoints: [http]
          service: oauth2-proxy
          rule: "Host(`infra.moov.io`)"
          middlewares:
            - infra-moov-io-http
        "infra-idx":
          entryPoints: [https]
          service: oauth2-proxy
          rule: "Host(`infra.moov.io`) && Path(`/`)"
          tls:
            certResolver: default
        alertmanager:
          entryPoints: [https]
          service: oauth2-proxy
          rule: "Host(`infra.moov.io`) && PathPrefix(`/alertmanager/`)"
          tls:
            certResolver: default
        traefik:
          entryPoints: [https]
          service: oauth2-proxy
          rule: "Host(`infra.moov.io`) && PathPrefix(`/traefik/`)"
          tls:
            certResolver: default
        prometheus:
          entryPoints: [https]
          service: oauth2-proxy
          rule: "Host(`infra.moov.io`) && PathPrefix(`/prometheus/`)"
          tls:
            certResolver: default
        grafana:
          entryPoints: [https]
          service: oauth2-proxy
          rule: "Host(`infra.moov.io`) && PathPrefix(`/grafana/`)"
          tls:
            certResolver: default
        polaris:
          entryPoints: [https]
          service: oauth2-proxy
          rule: "Host(`infra.moov.io`) && PathPrefix(`/polaris/`)"
          tls:
            certResolver: default
        stargazers:
          entryPoints: [https]
          service: oauth2-proxy
          rule: "Host(`crm.moov.io`) && PathPrefix(`/stargazers`)"
          tls:
            certResolver: default
        corteza:
          entryPoints: [https]
          service: corteza
          rule: "Host(`crm.moov.io`)"
          tls:
            certResolver: default
        "crm-moov-io-http":
          entryPoints: [http]
          service: oauth2-proxy
          rule: "Host(`crm.moov.io`)"
          middlewares:
            - crm-moov-io-http
        corteza-api:
          entryPoints: [https]
          service: corteza-api
          rule: "Host(`api.crm.moov.io`)"
          tls:
            certResolver: default
        soc2:
          entryPoints: [https]
          service: soc2
          rule: "Host(`moov.io`) && PathPrefix(`/soc2`)"
          middlewares:
            - soc2
          tls:
            certResolver: default
    api:
      insecure: true
      dashboard: true
    metrics:
      prometheus: {}
    ping:
      entryPoint: https
    log:
      level: INFO
    accessLog: {}
    certificatesResolvers:
      default:
        acme:
          email: security@moov.io
          caServer: "https://acme-v02.api.letsencrypt.org/directory"
          storage: /opt/traefik/letsencrypt.json
          keyType: EC384
          # tlsChallenge: {}
          httpChallenge:
            entryPoint: http
  nginx.conf: |
    daemon off;
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    # error_log /dev/stdout warn;
    pid       /var/run/nginx.pid;
    events {
      worker_connections  1024;
    }
    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
      '$status $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;
      # access_log /dev/stdout main;
      sendfile        on;
      #tcp_nopush     on;
      keepalive_timeout 65;
      gzip  on;
      include /opt/nginx/conf.d/*.conf;
    }
  default.conf: |
    server {
      listen 8080;
      root /usr/share/nginx/www;
      index index.html index.htm;
      stub_status;
      location /traefik/ {
        rewrite    /traefik/(.*) /$1 break;
        proxy_pass http://localhost:8081/;
      }
    }
  # metrics is for prometheus metrics scraping
  # (avoid error logs)
  metrics: |
    # no content
  index.html: |
    nginx - traefik
---
