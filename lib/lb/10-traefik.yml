---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: lb
spec:
  type: LoadBalancer
  selector:
    app: traefik
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: proxy
      protocol: TCP
      port: 443
      targetPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard
  namespace: lb
  annotations:
    # We split traefik ports into two services so we can lockdown the dashboard
    # to internal requests (and then filter those through an auth proxy).
    # traefik.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8"
spec:
  type: LoadBalancer
  selector:
    app: traefik
  ports:
    - name: dashboard
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  namespace: lb

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik
  namespace: lb
spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: traefik
              servicePort: 8080

---
# TODO(adam): notes from docs
# - store certs in kv? (Why not k8s Secret?)
#   - https://docs.traefik.io/configuration/acme/#as-a-key-value-store-entry
# - https://docs.traefik.io/configuration/commons/#custom-error-pages
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: lb
data:
  traefik.toml: |
      defaultEntryPoints = ["http","https"]
      [entryPoints]
      [entryPoints.http]
      address = ":80"
      [entryPoints.http.redirect]
      entryPoint = "https"
      [entryPoints.https]
      address = ":443"
      [entryPoints.https.tls]
      [acme]
      email = "security@moov.io"
      storageFile = "/etc/traefik/letsencrypt.json"
      entryPoint = "https"
      onDemand = true
      onHostRule = true
      # caServer = "https://acme-staging.api.letsencrypt.org/directory"
      caServer = "https://acme-v01.api.letsencrypt.org/directory"
      [[acme.domains]]
      main = "api.moov.io"
      [kubernetes]
      namespaces = ["apps", "infra", "lb"]
      [metrics]
      [metrics.prometheus]

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: traefik
  namespace: lb
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 30
      containers:
      - image: traefik:v1.7
        imagePullPolicy: Always
        name: traefik
        args:
          - --api
          - --kubernetes
          - --logLevel=DEBUG
          - --configFile=/etc/traefik/traefik.toml
        volumeMounts:
          - name: traefik-config
            mountPath: /etc/traefik/
        ports:
          - containerPort: 80
            name: proxy
            protocol: TCP
          - containerPort: 8080
            name: dashboard
            protocol: TCP
      volumes:
        - name: traefik-config
          configMap:
            name: traefik-config
            items:
              - key: traefik.toml
                path: traefik.toml
      restartPolicy: Always

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
  - kind: ServiceAccount
    name: traefik
    namespace: lb

---
